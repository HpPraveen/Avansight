@model IEnumerable<Avansight.Domain.Patient>

@{
    ViewData["Title"] = "Patient Details";
}

<h1>Simulate Patient</h1>

<hr/>
<div class="row">
    <div class="col-md-6">
        <form asp-action="Index">
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Sample Size:</label>
                <div class="col-sm-4">
                    <input type="number" min="10" class="form-control" id="sampleSize" required>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Gender (Weight):</label>
                <div class="col-sm-8">
                    <input class="col-sm-5" type="number" min="1" placeholder="Male" id="maleW">
                    <input class="col-sm-5" type="number" min="1" placeholder="Female" id="femaleW">
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">Age:</label>
                <div class="col-sm-10">
                    <label class="col-sm-2 col-form-label">21-30</label>
                    <label class="col-sm-2 col-form-label">31-40</label>
                    <label class="col-sm-2 col-form-label">41-50</label>
                    <label class="col-sm-2 col-form-label">51-60</label>
                    <label class="col-sm-2 col-form-label">61-70</label>
                    <input class="col-sm-2" type="number" min="1" id="ageGrp1">
                    <input class="col-sm-2" type="number" min="1" id="ageGrp2">
                    <input class="col-sm-2" type="number" min="1" id="ageGrp3">
                    <input class="col-sm-2" type="number" min="1" id="ageGrp4">
                    <input class="col-sm-2" type="number" min="1" id="ageGrp5">

                </div>
            </div>
            <br/>
            <button type="submit" class="btn btn-primary" id="generatePatient">Generate Patient</button>
            <button type="submit" class="btn badge-success" id="saveGenerate">Save Generated Records</button>  
            <button type="submit" class="btn border-primary" id="cancel">cancel</button>

            <div id="partialView"></div>
        </form>
    </div>
</div>
<hr/>
<div class="row">
    <div class="col-md-6" id="barChart"></div>
    <div class="col-md-1"></div>
    <div class="col-md-5" id="pieChart"></div>
</div>


@section Scripts {

    <script src="~/lib/domo-phoenix/build/global/domoPhoenix.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script type="text/javascript">

        $(function() {
            $("#generatePatient").show();
            $("#saveGenerate").hide();
            GetPatientData();
            SavePatientData();
            ClearData();
        });

        function GetPatientData() {
            $("#generatePatient").click(function() {

                var sampleSizeValue = $("#sampleSize").val();
                var maleWeightValue = $("#maleW").val();
                var femaleWeightValue = $("#femaleW").val();
                var ageGrp1Value = $("#ageGrp1").val();
                var ageGrp2Value = $("#ageGrp2").val();
                var ageGrp3Value = $("#ageGrp3").val();
                var ageGrp4Value = $("#ageGrp4").val();
                var ageGrp5Value = $("#ageGrp5").val();

                var ageGrpValue = {};
                ageGrpValue.NoOfPersonsInAgeGroup1 = ageGrp1Value;
                ageGrpValue.NoOfPersonsInAgeGroup2 = ageGrp2Value;
                ageGrpValue.NoOfPersonsInAgeGroup3 = ageGrp3Value;
                ageGrpValue.NoOfPersonsInAgeGroup4 = ageGrp4Value;
                ageGrpValue.NoOfPersonsInAgeGroup5 = ageGrp5Value;

                if (sampleSizeValue === "") {
                    alert("Please add a Sample Size");
                } else {
                    $.ajax({
                        type: "POST",
                        dataType: "html",
                        url: '@Url.Action("GetPatientData", "Patient")',
                        data: { sampleSize: sampleSizeValue, maleWeight: maleWeightValue, femaleWeight: femaleWeightValue, patientDetails: ageGrpValue },
                        success: function(data) {
                            BarChart(data);
                            $("#saveGenerate").show();
                            $("#generatePatient").hide();
                        },
                        error: function() {
                            alert("Error while inserting data");
                        }
                    });
                }
                return false;
            });
        }

        function BarChart(patientData) {

            var ageGrp = JSON.parse(patientData);

            var data = {
                rows: [
                    ['First Age Group', '21-30', ageGrp.noOfPersonsInAgeGroup1],
                    ['Second Age Group', '31-40', ageGrp.noOfPersonsInAgeGroup2],
                    ['Third Age Group', '41-50', ageGrp.noOfPersonsInAgeGroup3],
                    ['Forth Age Group', '51-60', ageGrp.noOfPersonsInAgeGroup4],
                    ['Fifth Age Group', '61-70', ageGrp.noOfPersonsInAgeGroup5]
                ],
                columns: [
                    {
                        type: DomoPhoenix.DATA_TYPE.STRING,
                        name: 'name',
                        mapping: DomoPhoenix.MAPPING.SERIES
                    },
                    {
                        type: DomoPhoenix.DATA_TYPE.STRING,
                        name: 'type',
                        mapping: DomoPhoenix.MAPPING.ITEM
                    },
                    {
                        type: DomoPhoenix.DATA_TYPE.DOUBLE,
                        name: 'value',
                        mapping: DomoPhoenix.MAPPING.VALUE
                    }
                ]
            };

            var options = {
                width: 600,
                height: 500
            };

            var chart = new DomoPhoenix.Chart(DomoPhoenix.CHART_TYPE.BAR, data, options);

            document.getElementById("barChart").appendChild(chart.canvas);
            chart.render();

            PieChart(ageGrp.noOfMales, ageGrp.noOfFemales);
        }

        function PieChart(noOfMales, noOfFemales) {

            var data = {
                rows: [
                    ['Male', noOfMales],
                    ['Female', noOfFemales]
                ],
                columns: [
                    {
                        type: DomoPhoenix.DATA_TYPE.STRING,
                        name: 'type',
                        mapping: DomoPhoenix.MAPPING.ITEM
                    },
                    {
                        type: DomoPhoenix.DATA_TYPE.DOUBLE,
                        name: 'value',
                        mapping: DomoPhoenix.MAPPING.VALUE
                    }
                ]
            };
            var options = {};
            var chart = new DomoPhoenix.Chart(DomoPhoenix.CHART_TYPE.PIE, data, options);

            document.getElementById("pieChart").appendChild(chart.canvas);
            chart.render();
        }

        function SavePatientData() {
            $("#saveGenerate").click(function() {
                $.ajax({
                    type: "POST",
                    dataType: "html",
                    url: '@Url.Action("SavePatientData", "Patient")',
                    success: function (data) {
                        $("#partialView").html(data);
                        $("#barChart").hide();
                        $("#pieChart").hide();
                    },
                    error: function() {
                        alert("Error while inserting data");
                    }
                });
                return false;
            });
        }


        function ClearData() {
            $("#cancel").click(function() {
                location.reload();
            });
        }

    </script>
}